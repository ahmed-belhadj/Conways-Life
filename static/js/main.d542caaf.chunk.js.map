{"version":3,"sources":["components/Layout/NavBar/NavBar.js","components/Layout/GameOfLife/Grid/Grid.js","components/Layout/GameOfLife/Grid/Cell/Cell.js","components/Layout/GameOfLife/Rules/Rules.js","components/Layout/GameOfLife/GameOfLife.js","components/Layout/About/About.js","components/Layout/Layout.js","components/App.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","color","light","expand","fixed","href","onClick","navbar","className","NavLink","to","React","Component","Grid","styled","div","_templateObject","width","height","cellSize","Cell","style","left","concat","x","top","y","background","position","Rules","Alive","strong","Rules_templateObject","alive","Dead","_templateObject2","dead","GameOfLife","handleClick","event","offsetX","clientX","getCell","offsetY","clientY","Math","floor","columns","rows","grid","cells","fillCells","startGame","isPlaying","nextGeneration","stopGame","speedHandler","window","clearTimeout","handleClear","clearGrid","generation","handleRandom","random","handleCellColor","cellColor","target","value","handleGridColor","gridColor","handleSpeed","speed","push","gridRef","getBoundingClientRect","pageXOffset","document","documentElement","clientLeft","pageYOffset","clientTop","_this2","neighbors","applyRules","setTimeout","directions","i","length","direction","y1","x1","_this3","GameOfLife_Rules_Rules","Grid_Grid","ref","g","map","cell","Cell_Cell","key","size","react_fontawesome_index_es","icon","type","min","max","class","onChange","About","Layout","NavBar_NavBar","Route","exact","path","component","library","add","faPlay","faPause","faStop","faRandom","App","Layout_Layout","ReactDOM","render","BrowserRouter","components_App","getElementById"],"mappings":"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","file":"static/js/main.d542caaf.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem\n} from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\" fixed>\n          <NavbarBrand href=\"/\">Conway's Game of Life</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink to=\"/about\">About</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import styled from \"styled-components\";\n\nconst Grid = styled.div`\n  position: relative;\n  margin: 0 auto;\n  background-color: ${props => props.color || \"#000\"};\n  width: ${props => props.width || 800}px;\n  height: ${props => props.height || 600}px;\n  background-image: linear-gradient(#333 1px, transparent 1px),\n    linear-gradient(90deg, #333 1px, transparent 1px);\n  background-size: ${props => props.cellSize || 20}px\n    ${props => props.cellSize || 20}px;\n`;\n\nexport default Grid;\n","import React from \"react\";\n\nexport default class Cell extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          left: `${20 * this.props.x + 1}px`,\n          top: `${20 * this.props.y + 1}px`,\n          width: `${20 - 1}px`,\n          height: `${20 - 1}px`,\n          background: `${this.props.color || \"#00FF00\"}`,\n          position: `absolute`\n        }}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nclass Rules extends Component {\n  render() {\n    const Alive = styled.strong`\n      -webkit-text-stroke: 1px black;\n      color: ${this.props.alive};\n      font-weight: bold;\n    `;\n    const Dead = styled.strong`\n      -webkit-text-stroke: 1px black;\n      color: ${this.props.dead};\n      font-weight: bold;\n    `;\n    return (\n      <div>\n        <h2>Rules:</h2>\n        <ul>\n          <li>\n            If a cell is <Alive>alive</Alive> and it has exactly 2 or 3 live\n            neighbors, it <Alive>stays alive.</Alive>\n          </li>\n          <li>\n            If a cell is <Alive>alive</Alive> and it has less than 2 or 4+ live\n            neighbors, it <Dead>dies</Dead>\n          </li>\n          <li>\n            If a cell is <Dead>dead</Dead> and it has exactly 3 live neighbors,\n            it <Alive>comes to life.</Alive>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Rules;\n","import React from \"react\";\nimport { Row, Button, ButtonGroup, Input } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Grid from \"./Grid/Grid\";\nimport Cell from \"./Grid/Cell/Cell\";\nimport Rules from \"./Rules/Rules\";\n\nclass GameOfLife extends React.Component {\n  constructor(props) {\n    super(props);\n    this.rows = 30;\n    this.columns = 40;\n    this.grid = this.clearGrid();\n    this.state = {\n      //   rows: 30,\n      //   columns: 40,\n      cells: [],\n      speed: 1000,\n      isPlaying: false,\n      generation: 0,\n      cellColor: \"#00FF00\",\n      gridColor: \"#000\"\n    };\n  }\n\n  clearGrid() {\n    let grid = [];\n\n    for (let y = 0; y < this.rows; y++) {\n      grid[y] = [];\n      for (let x = 0; x < this.columns; x++) {\n        grid[y][x] = false;\n      }\n    }\n\n    return grid;\n  }\n\n  fillCells() {\n    let cells = [];\n\n    for (let y = 0; y < this.rows; y++) {\n      for (let x = 0; x < this.columns; x++) {\n        if (this.grid[y][x]) {\n          cells.push({ x, y });\n        }\n      }\n    }\n\n    return cells;\n  }\n\n  getCell() {\n    return {\n      x:\n        this.gridRef.getBoundingClientRect().left +\n        window.pageXOffset -\n        document.documentElement.clientLeft,\n      y:\n        this.gridRef.getBoundingClientRect().top +\n        window.pageYOffset -\n        document.documentElement.clientTop\n    };\n  }\n\n  handleClick = event => {\n    const offsetX = event.clientX - this.getCell().x;\n    const offsetY = event.clientY - this.getCell().y;\n    const x = Math.floor(offsetX / 20);\n    const y = Math.floor(offsetY / 20);\n\n    if (x >= 0 && x <= this.columns && y >= 0 && y <= this.rows) {\n      this.grid[y][x] = !this.grid[y][x];\n    }\n\n    this.setState({ cells: this.fillCells() });\n  };\n\n  startGame = () => {\n    this.setState({ isPlaying: true });\n    this.nextGeneration();\n  };\n\n  stopGame = () => {\n    this.setState({ isPlaying: false });\n    if (this.speedHandler) {\n      window.clearTimeout(this.speedHandler);\n      this.speedHandler = null;\n    }\n  };\n\n  handleClear = () => {\n    this.grid = this.clearGrid();\n    this.setState({ cells: this.fillCells(), generation: 0 });\n    this.stopGame();\n  };\n\n  handleRandom = () => {\n    for (let y = 0; y < this.rows; y++) {\n      for (let x = 0; x < this.columns; x++) {\n        this.grid[y][x] = Math.random() >= 0.5;\n      }\n    }\n\n    this.setState({ cells: this.fillCells() });\n  };\n\n  handleCellColor = event => {\n    this.setState({ cellColor: event.target.value });\n  };\n\n  handleGridColor = event => {\n    this.setState({ gridColor: event.target.value });\n  };\n\n  handleSpeed = event => {\n    this.setState({ speed: event.target.value });\n  };\n\n  nextGeneration() {\n    let generation = this.clearGrid();\n\n    for (let y = 0; y < this.rows; y++) {\n      for (let x = 0; x < this.columns; x++) {\n        let neighbors = this.applyRules(this.grid, x, y);\n        if (this.grid[y][x]) {\n          if (neighbors === 2 || neighbors === 3) {\n            generation[y][x] = true;\n          } else {\n            generation[y][x] = false;\n          }\n        } else {\n          if (!this.grid[y][x] && neighbors === 3) {\n            generation[y][x] = true;\n          }\n        }\n      }\n    }\n\n    this.grid = generation;\n    this.setState(state => ({\n      cells: this.fillCells(),\n      generation: state.generation + 1\n    }));\n\n    this.speedHandler = window.setTimeout(() => {\n      this.nextGeneration();\n    }, (1 / this.state.speed) * 100000);\n  }\n\n  applyRules(grid, x, y) {\n    let neighbors = 0;\n    const directions = [\n      [-1, -1],\n      [-1, 0],\n      [-1, 1],\n      [0, 1],\n      [1, 1],\n      [1, 0],\n      [1, -1],\n      [0, -1]\n    ];\n\n    for (let i = 0; i < directions.length; i++) {\n      const direction = directions[i];\n      let y1 = y + direction[0];\n      let x1 = x + direction[1];\n\n      if (\n        x1 >= 0 &&\n        x1 < this.columns &&\n        y1 >= 0 &&\n        y1 < this.rows &&\n        grid[y1][x1]\n      ) {\n        neighbors++;\n      }\n    }\n\n    return neighbors;\n  }\n\n  render() {\n    return (\n      <Row>\n        <Rules alive={this.state.cellColor} dead={this.state.gridColor} />\n        <div>\n          <h2>Generation: {this.state.generation}</h2>\n\n          <Grid\n            onClick={this.handleClick}\n            ref={g => {\n              this.gridRef = g;\n            }}\n            color={this.state.gridColor}\n          >\n            {this.state.cells.map(cell => (\n              <Cell\n                x={cell.x}\n                y={cell.y}\n                key={`${cell.x},${cell.y}`}\n                color={this.state.cellColor}\n              />\n            ))}\n          </Grid>\n        </div>\n        <div>\n          <ButtonGroup>\n            {this.state.isPlaying ? (\n              <Button onClick={this.stopGame} size=\"lg\">\n                <FontAwesomeIcon icon=\"pause\" /> Pause\n              </Button>\n            ) : (\n              <Button onClick={this.startGame} size=\"lg\">\n                <FontAwesomeIcon icon=\"play\" /> Play\n              </Button>\n            )}\n            <Button onClick={this.handleClear} color=\"danger\" size=\"lg\">\n              <FontAwesomeIcon icon=\"stop\" /> Stop\n            </Button>\n            <Button onClick={this.handleRandom} size=\"lg\">\n              <FontAwesomeIcon icon=\"random\" /> Random\n            </Button>\n          </ButtonGroup>\n          <Input\n            type=\"range\"\n            min=\"100\"\n            max=\"6000\"\n            value={this.state.speed}\n            class=\"slider\"\n            onChange={this.handleSpeed}\n          />\n          {this.state.speed / 100} generation(s) per second\n          <p>Cell color:</p>\n          <Input\n            type=\"color\"\n            value={this.state.cellColor}\n            onChange={this.handleCellColor}\n          />\n          <p>Grid color:</p>\n          <Input\n            type=\"color\"\n            value={this.state.gridColor}\n            onChange={this.handleGridColor}\n          />\n        </div>\n      </Row>\n    );\n  }\n}\n\nexport default GameOfLife;\n","import React, { Component } from \"react\";\nimport { Row } from \"reactstrap\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        <Row>\n          <h2>About this Algorithm:</h2>\n        </Row>\n        <Row>\n          <p>\n            <strong>\n              Show us that you researched this algorithm! Talk about the\n              founder, Turing-completeness, etc.\n            </strong>\n          </p>\n        </Row>\n        <Row>\n          <p>\n            A very famous cellular automaton is John Conway's Game of Life. app.\n            This game is a class of discrete model known as a Cellular\n            Automaton, abbreviated CA.\n          </p>\n          <p>\n            It's made up of a grid of cells (usually 2D, but can be any\n            dimension) that follow a simple set of rules from which complex\n            behaviors can emerge.\n          </p>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport { Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar/NavBar\";\nimport GameOfLife from \"./GameOfLife/GameOfLife\";\nimport About from \"./About/About\";\n\nexport default class Layout extends React.Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <Container>\n          <Row>\n            <Route exact path=\"/\" component={GameOfLife} />\n            <Route path=\"/about\" component={About} />\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faPlay,\n  faPause,\n  faStop,\n  faRandom\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Layout from \"./Layout/Layout\";\n\nlibrary.add(faPlay, faPause, faStop, faRandom);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// import \"./index.css\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}